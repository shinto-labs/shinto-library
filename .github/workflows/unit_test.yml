name: Unit test

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    outputs:
      coverage: ${{ steps.coverage_output.outputs.coverage }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install pipenv && pipenv requirements --dev > requirements.txt && pip install -r requirements.txt

      - name: Run tests
        run: |
          nose2 -s tests -C --coverage=shinto --coverage-report=term
          coverage report -m > coverage.txt

      - name: Set coverage output
        id: coverage_output
        run: |
          COVERAGE=$(grep -Po 'TOTAL\s+\d+\s+\d+\s+\K\d+%' coverage.txt | tr -d '%')
          echo "::set-output name=coverage::$COVERAGE"

  test-coverage:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check coverage
        run: |
          COVERAGE="${{ needs.test.outputs.coverage }}"
          echo "Total coverage: $COVERAGE%"

          # Fail the job if coverage is less than 90%
          if [ $COVERAGE -lt 90 ]; then
            echo "Code coverage ($COVERAGE%) is below the threshold of 90%"
            exit 1
          else
            echo "Code coverage ($COVERAGE%) meets the threshold of 90%"
          fi
