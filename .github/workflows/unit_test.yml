# file_version = "0.1.1"
name: Unit test

on:
  push:
    branches:
      - main
      - development
    paths:
      - "**/*.py"
      - ".github/workflows/unit_test.yml"
      - "scripts/send_to_loki.sh"
      - "pyproject.toml"
      - "pdm.lock"
  pull_request:
    branches:
      - "**"
    paths:
      - "*.py"
      - ".github/workflows/unit_test.yml"
      - "scripts/send_to_loki.sh"
      - "pyproject.toml"
      - "pdm.lock"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Start time
        uses: shinto-labs/send-log-to-loki@v1.0.3
        with:
          measurement: start

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pdm sync -d

      - name: Run tests
        id: test
        run: |
          set +e
          test_output=$(pdm run -v nose2 -s tests -C --coverage=app.shinto_backend --coverage-report=term 2>&1)
          exit_code=$?
          set -e
          echo "$test_output"

          coverage=$(echo "$test_output" | grep -oP "TOTAL +\d+ +\d+ +\K\d+" || echo 0)
          failures=$(echo "$test_output" | grep -oP 'FAILED.*failures=\K\d+' || echo 0)
          errors=$(echo "$test_output" | grep -oP "FAILED.*errors=\K\d+" || echo 0)
          ran_tests=$(echo "$test_output" | grep -oP "Ran \d+ tests in" | grep -oP "\d+" || echo 0)
          total_errors=$((errors + failures))

          echo "coverage=$coverage" >> $GITHUB_OUTPUT
          echo "errors=$total_errors" >> $GITHUB_OUTPUT
          echo "ran_tests=$ran_tests" >> $GITHUB_OUTPUT

          # Disable coverage check
          # if [ $coverage -lt 80 ]; then
          #   echo "Coverage is less than 80%"
          #   exit 1
          # fi

          exit $exit_code

      - name: Send Logs to Loki
        if: always()
        uses: shinto-labs/send-log-to-loki@v1.0.3
        with:
          loki_address: "https://loki.shintolabs.net"
          loki_username: ${{ secrets.LOKI_USERNAME }}
          loki_password: ${{ secrets.LOKI_PASSWORD }}
          status: ${{ job.status }}
          additional_labels: "test_errors=${{ steps.test.outputs.errors }} test_coverage=${{ steps.test.outputs.coverage }} test_ran_tests=${{ steps.test.outputs.ran_tests }}"
